overlay: 1.0.0
info:
  title: Fix timestamp value field format to generate as string type
  version: 0.0.1
actions:
  # Remove format field from timestamp value in components.schemas.output-value
  - target: "$.components.schemas['output-value'].anyOf[18].properties.value.format"
    description: "Remove format field from timestamp value in output-value schema to generate as str instead of date"
    remove: true

  # Remove format field from timestamp value in POST /v2/objects/{object}/records/query response
  - target: "$.paths['/v2/objects/{object}/records/query'].post.responses['200'].content['application/json'].schema.properties.data.items.properties.values.additionalProperties.items.oneOf[16].properties.value.format"
    description: "Remove format field from timestamp value in query records response"
    remove: true

  # Remove format field from timestamp value in POST /v2/objects/{object}/records response
  - target: "$.paths['/v2/objects/{object}/records'].post.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value.format"
    description: "Remove format field from timestamp value in POST records response"
    remove: true

  # Remove format field from timestamp value in PUT /v2/objects/{object}/records response
  - target: "$.paths['/v2/objects/{object}/records'].put.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value.format"
    description: "Remove format field from timestamp value in PUT records response"
    remove: true

  # Remove format field from timestamp value in GET /v2/objects/{object}/records/{record_id} response
  - target: "$.paths['/v2/objects/{object}/records/{record_id}'].get.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value.format"
    description: "Remove format field from timestamp value in GET record response"
    remove: true

  # Remove format field from timestamp value in PATCH /v2/objects/{object}/records/{record_id} response
  - target: "$.paths['/v2/objects/{object}/records/{record_id}'].patch.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value.format"
    description: "Remove format field from timestamp value in PATCH record response"
    remove: true

  # Remove format field from timestamp value in PUT /v2/objects/{object}/records/{record_id} response
  - target: "$.paths['/v2/objects/{object}/records/{record_id}'].put.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value.format"
    description: "Remove format field from timestamp value in PUT record response"
    remove: true

  # Remove format field from timestamp value in GET /v2/objects/{object}/records/{record_id}/attributes/{attribute}/values response
  - target: "$.paths['/v2/objects/{object}/records/{record_id}/attributes/{attribute}/values'].get.responses['200'].content['application/json'].schema.properties.data.items.oneOf[16].properties.value.format"
    description: "Remove format field from timestamp value in GET attribute values response"
    remove: true

  # Remove format field from timestamp value in POST /v2/lists/{list}/entries/query response
  - target: "$.paths['/v2/lists/{list}/entries/query'].post.responses['200'].content['application/json'].schema.properties.data.items.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.format"
    description: "Remove format field from timestamp value in query list entries response"
    remove: true

  # Remove format field from timestamp value in POST /v2/lists/{list}/entries response
  - target: "$.paths['/v2/lists/{list}/entries'].post.responses['200'].content['application/json'].schema.properties.data.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.format"
    description: "Remove format field from timestamp value in POST list entries response"
    remove: true

  # Remove format field from timestamp value in PUT /v2/lists/{list}/entries response
  - target: "$.paths['/v2/lists/{list}/entries'].put.responses['200'].content['application/json'].schema.properties.data.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.format"
    description: "Remove format field from timestamp value in PUT list entries response"
    remove: true

  # Remove format field from timestamp value in GET /v2/lists/{list}/entries/{entry_id} response
  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}'].get.responses['200'].content['application/json'].schema.properties.data.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.format"
    description: "Remove format field from timestamp value in GET list entry response"
    remove: true

  # Remove format field from timestamp value in PATCH /v2/lists/{list}/entries/{entry_id} response
  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}'].patch.responses['200'].content['application/json'].schema.properties.data.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.format"
    description: "Remove format field from timestamp value in PATCH list entry response"
    remove: true

  # Remove format field from timestamp value in PUT /v2/lists/{list}/entries/{entry_id} response
  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}'].put.responses['200'].content['application/json'].schema.properties.data.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.format"
    description: "Remove format field from timestamp value in PUT list entry response"
    remove: true

  # Remove format field from timestamp value in GET /v2/lists/{list}/entries/{entry_id}/attributes/{attribute}/values response
  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}/attributes/{attribute}/values'].get.responses['200'].content['application/json'].schema.properties.data.items.oneOf[16].properties.value.format"
    description: "Remove format field from timestamp value in GET list entry attribute values response"
    remove: true

  # Change timestamp value examples to non-ISO8601 strings so Speakeasy doesn't infer date type
  - target: "$.paths['/v2/objects/{object}/records/query'].post.responses['200'].content['application/json'].schema.properties.data.items.properties.values.additionalProperties.items.oneOf[16].properties.value.example"
    description: "Change timestamp example to non-ISO8601 format in POST /v2/objects/{object}/records/query"
    update: "timestamp_string_value"

  - target: "$.paths['/v2/objects/{object}/records'].post.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value.example"
    description: "Change timestamp example to non-ISO8601 format in POST /v2/objects/{object}/records"
    update: "timestamp_string_value"

  - target: "$.paths['/v2/objects/{object}/records'].put.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value.example"
    description: "Change timestamp example to non-ISO8601 format in PUT /v2/objects/{object}/records"
    update: "timestamp_string_value"

  - target: "$.paths['/v2/objects/{object}/records/{record_id}'].get.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value.example"
    description: "Change timestamp example to non-ISO8601 format in GET /v2/objects/{object}/records/{record_id}"
    update: "timestamp_string_value"

  - target: "$.paths['/v2/objects/{object}/records/{record_id}'].patch.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value.example"
    description: "Change timestamp example to non-ISO8601 format in PATCH /v2/objects/{object}/records/{record_id}"
    update: "timestamp_string_value"

  - target: "$.paths['/v2/objects/{object}/records/{record_id}'].put.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value.example"
    description: "Change timestamp example to non-ISO8601 format in PUT /v2/objects/{object}/records/{record_id}"
    update: "timestamp_string_value"

  - target: "$.paths['/v2/objects/{object}/records/{record_id}/attributes/{attribute}/values'].get.responses['200'].content['application/json'].schema.properties.data.items.oneOf[16].properties.value.example"
    description: "Change timestamp example to non-ISO8601 format in GET /v2/objects/{object}/records/{record_id}/attributes/{attribute}/values"
    update: "timestamp_string_value"

  - target: "$.paths['/v2/lists/{list}/entries/query'].post.responses['200'].content['application/json'].schema.properties.data.items.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.example"
    description: "Change timestamp example to non-ISO8601 format in POST /v2/lists/{list}/entries/query"
    update: "timestamp_string_value"

  - target: "$.paths['/v2/lists/{list}/entries'].post.responses['200'].content['application/json'].schema.properties.data.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.example"
    description: "Change timestamp example to non-ISO8601 format in POST /v2/lists/{list}/entries"
    update: "timestamp_string_value"

  - target: "$.paths['/v2/lists/{list}/entries'].put.responses['200'].content['application/json'].schema.properties.data.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.example"
    description: "Change timestamp example to non-ISO8601 format in PUT /v2/lists/{list}/entries"
    update: "timestamp_string_value"

  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}'].get.responses['200'].content['application/json'].schema.properties.data.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.example"
    description: "Change timestamp example to non-ISO8601 format in GET /v2/lists/{list}/entries/{entry_id}"
    update: "timestamp_string_value"

  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}'].patch.responses['200'].content['application/json'].schema.properties.data.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.example"
    description: "Change timestamp example to non-ISO8601 format in PATCH /v2/lists/{list}/entries/{entry_id}"
    update: "timestamp_string_value"

  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}'].put.responses['200'].content['application/json'].schema.properties.data.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.example"
    description: "Change timestamp example to non-ISO8601 format in PUT /v2/lists/{list}/entries/{entry_id}"
    update: "timestamp_string_value"

  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}/attributes/{attribute}/values'].get.responses['200'].content['application/json'].schema.properties.data.items.oneOf[16].properties.value.example"
    description: "Change timestamp example to non-ISO8601 format in GET /v2/lists/{list}/entries/{entry_id}/attributes/{attribute}/values"
    update: "timestamp_string_value"

  # Change timestamp value descriptions to avoid Speakeasy inferring date type
  - target: "$.paths['/v2/objects/{object}/records/query'].post.responses['200'].content['application/json'].schema.properties.data.items.properties.values.additionalProperties.items.oneOf[16].properties.value.description"
    description: "Change timestamp description in POST /v2/objects/{object}/records/query"
    update: "A timestamp string value"

  - target: "$.paths['/v2/objects/{object}/records'].post.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value.description"
    description: "Change timestamp description in POST /v2/objects/{object}/records"
    update: "A timestamp string value"

  - target: "$.paths['/v2/objects/{object}/records'].put.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value.description"
    description: "Change timestamp description in PUT /v2/objects/{object}/records"
    update: "A timestamp string value"

  - target: "$.paths['/v2/objects/{object}/records/{record_id}'].get.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value.description"
    description: "Change timestamp description in GET /v2/objects/{object}/records/{record_id}"
    update: "A timestamp string value"

  - target: "$.paths['/v2/objects/{object}/records/{record_id}'].patch.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value.description"
    description: "Change timestamp description in PATCH /v2/objects/{object}/records/{record_id}"
    update: "A timestamp string value"

  - target: "$.paths['/v2/objects/{object}/records/{record_id}'].put.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value.description"
    description: "Change timestamp description in PUT /v2/objects/{object}/records/{record_id}"
    update: "A timestamp string value"

  - target: "$.paths['/v2/objects/{object}/records/{record_id}/attributes/{attribute}/values'].get.responses['200'].content['application/json'].schema.properties.data.items.oneOf[16].properties.value.description"
    description: "Change timestamp description in GET /v2/objects/{object}/records/{record_id}/attributes/{attribute}/values"
    update: "A timestamp string value"

  - target: "$.paths['/v2/lists/{list}/entries/query'].post.responses['200'].content['application/json'].schema.properties.data.items.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.description"
    description: "Change timestamp description in POST /v2/lists/{list}/entries/query"
    update: "A timestamp string value"

  - target: "$.paths['/v2/lists/{list}/entries'].post.responses['200'].content['application/json'].schema.properties.data.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.description"
    description: "Change timestamp description in POST /v2/lists/{list}/entries"
    update: "A timestamp string value"

  - target: "$.paths['/v2/lists/{list}/entries'].put.responses['200'].content['application/json'].schema.properties.data.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.description"
    description: "Change timestamp description in PUT /v2/lists/{list}/entries"
    update: "A timestamp string value"

  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}'].get.responses['200'].content['application/json'].schema.properties.data.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.description"
    description: "Change timestamp description in GET /v2/lists/{list}/entries/{entry_id}"
    update: "A timestamp string value"

  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}'].patch.responses['200'].content['application/json'].schema.properties.data.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.description"
    description: "Change timestamp description in PATCH /v2/lists/{list}/entries/{entry_id}"
    update: "A timestamp string value"

  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}'].put.responses['200'].content['application/json'].schema.properties.data.properties.entry_values.additionalProperties.items.oneOf[16].properties.value.description"
    description: "Change timestamp description in PUT /v2/lists/{list}/entries/{entry_id}"
    update: "A timestamp string value"

  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}/attributes/{attribute}/values'].get.responses['200'].content['application/json'].schema.properties.data.items.oneOf[16].properties.value.description"
    description: "Change timestamp description in GET /v2/lists/{list}/entries/{entry_id}/attributes/{attribute}/values"
    update: "A timestamp string value"

  # Add x-speakeasy-type to force string type for timestamp values
  - target: "$.paths['/v2/objects/{object}/records'].post.responses['200'].content['application/json'].schema.properties.data.properties.values.additionalProperties.items.oneOf[16].properties.value"
    description: "Force string type for timestamp value in POST /v2/objects/{object}/records"
    update:
      type: string
      x-speakeasy-type: string
      description: "A timestamp string value"
      example: "timestamp_string_value"

  # Rename 'list' parameter to 'list_id' to avoid Python built-in conflict
  # Use x-speakeasy-name-override to rename parameters without changing paths
  - target: "$.paths['/v2/lists/{list}'].get.parameters[?(@.name=='list')]"
    description: "Rename list parameter to list_id in GET /v2/lists/{list}"
    update:
      schema:
        type: string
        description: "A UUID or slug to identify the list."
        example: "33ebdbe9-e529-47c9-b894-0ba25e9c15c0"
      required: true
      name: "list"
      in: "path"
      x-speakeasy-name-override: "list_id"

  - target: "$.paths['/v2/lists/{list}'].patch.parameters[?(@.name=='list')]"
    description: "Rename list parameter to list_id in PATCH /v2/lists/{list}"
    update:
      schema:
        type: string
        description: "A UUID or slug to identify the list."
        example: "33ebdbe9-e529-47c9-b894-0ba25e9c15c0"
      required: true
      name: "list"
      in: "path"
      x-speakeasy-name-override: "list_id"

  - target: "$.paths['/v2/lists/{list}'].delete.parameters[?(@.name=='list')]"
    description: "Rename list parameter to list_id in DELETE /v2/lists/{list}"
    update:
      schema:
        type: string
        description: "A UUID or slug to identify the list."
        example: "33ebdbe9-e529-47c9-b894-0ba25e9c15c0"
      required: true
      name: "list"
      in: "path"
      x-speakeasy-name-override: "list_id"

  - target: "$.paths['/v2/lists/{list}/entries/query'].post.parameters[?(@.name=='list')]"
    description: "Rename list parameter to list_id in POST /v2/lists/{list}/entries/query"
    update:
      schema:
        type: string
        description: "A UUID or slug to identify the list."
        example: "33ebdbe9-e529-47c9-b894-0ba25e9c15c0"
      required: true
      name: "list"
      in: "path"
      x-speakeasy-name-override: "list_id"

  - target: "$.paths['/v2/lists/{list}/entries'].post.parameters[?(@.name=='list')]"
    description: "Rename list parameter to list_id in POST /v2/lists/{list}/entries"
    update:
      schema:
        type: string
        description: "A UUID or slug to identify the list."
        example: "33ebdbe9-e529-47c9-b894-0ba25e9c15c0"
      required: true
      name: "list"
      in: "path"
      x-speakeasy-name-override: "list_id"

  - target: "$.paths['/v2/lists/{list}/entries'].put.parameters[?(@.name=='list')]"
    description: "Rename list parameter to list_id in PUT /v2/lists/{list}/entries"
    update:
      schema:
        type: string
        description: "A UUID or slug to identify the list."
        example: "33ebdbe9-e529-47c9-b894-0ba25e9c15c0"
      required: true
      name: "list"
      in: "path"
      x-speakeasy-name-override: "list_id"

  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}'].get.parameters[?(@.name=='list')]"
    description: "Rename list parameter to list_id in GET /v2/lists/{list}/entries/{entry_id}"
    update:
      schema:
        type: string
        description: "A UUID or slug to identify the list."
        example: "33ebdbe9-e529-47c9-b894-0ba25e9c15c0"
      required: true
      name: "list"
      in: "path"
      x-speakeasy-name-override: "list_id"

  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}'].patch.parameters[?(@.name=='list')]"
    description: "Rename list parameter to list_id in PATCH /v2/lists/{list}/entries/{entry_id}"
    update:
      schema:
        type: string
        description: "A UUID or slug to identify the list."
        example: "33ebdbe9-e529-47c9-b894-0ba25e9c15c0"
      required: true
      name: "list"
      in: "path"
      x-speakeasy-name-override: "list_id"

  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}'].put.parameters[?(@.name=='list')]"
    description: "Rename list parameter to list_id in PUT /v2/lists/{list}/entries/{entry_id}"
    update:
      schema:
        type: string
        description: "A UUID or slug to identify the list."
        example: "33ebdbe9-e529-47c9-b894-0ba25e9c15c0"
      required: true
      name: "list"
      in: "path"
      x-speakeasy-name-override: "list_id"

  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}'].delete.parameters[?(@.name=='list')]"
    description: "Rename list parameter to list_id in DELETE /v2/lists/{list}/entries/{entry_id}"
    update:
      schema:
        type: string
        description: "A UUID or slug to identify the list."
        example: "33ebdbe9-e529-47c9-b894-0ba25e9c15c0"
      required: true
      name: "list"
      in: "path"
      x-speakeasy-name-override: "list_id"

  - target: "$.paths['/v2/lists/{list}/entries/{entry_id}/attributes/{attribute}/values'].get.parameters[?(@.name=='list')]"
    description: "Rename list parameter to list_id in GET /v2/lists/{list}/entries/{entry_id}/attributes/{attribute}/values"
    update:
      schema:
        type: string
        description: "A UUID or slug to identify the list."
        example: "33ebdbe9-e529-47c9-b894-0ba25e9c15c0"
      required: true
      name: "list"
      in: "path"
      x-speakeasy-name-override: "list_id"

  - target: "$.paths['/v2/threads/{thread}/entries/query'].post.parameters[?(@.name=='list')]"
    description: "Rename list parameter to list_id in POST /v2/threads/{thread}/entries/query"
    update:
      schema:
        type: string
      required: false
      name: "list"
      in: "query"
      x-speakeasy-name-override: "list_id"

  - target: "$.paths['/v2/threads/{thread}/entries'].post.parameters[?(@.name=='list')]"
    description: "Rename list parameter to list_id in POST /v2/threads/{thread}/entries"
    update:
      schema:
        type: string
      required: false
      name: "list"
      in: "query"
      x-speakeasy-name-override: "list_id"

  - target: "$.paths['/v2/threads'].get.parameters[?(@.name=='list')]"
    description: "Rename list parameter to list_id in GET /v2/threads"
    update:
      schema:
        type: string
        description: "Use this parameter to filter to threads on a specific entry. Must be passed with `entry_id`. Accepts either a slug or an ID."
        example: "33ebdbe9-e529-47c9-b894-0ba25e9c15c0"
      required: false
      name: "list"
      in: "query"
      x-speakeasy-name-override: "list_id"
